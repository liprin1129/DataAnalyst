ggplot(aes(x = age, y = male/female), data = pf.fc_by_age_gender.wide) +
geom_line() +
geom_hline(yintercept = 1, linetype = 'dashed', color = 'blue')
year_joined <- filter(pf, pf$dob_year == 2014)
year_joined <- filter(pf, pf$dob_year == 2014)
year_joined <- filter(pf, pf$dob_year = 2014)
year_joined <- subset(pf, pf$dob_year = 2014)
year_joined <- subset(pf, dob_year = 2014)
year_joined <- subset(pf, dob_year = 2014)
year_joined <- subset(pf, dob_year = 2014)
length(subset(pf, dob_year = 2014))
length(subset(pf, dob_year = 2014)$dob_year)
pf$year_joined <- subset(pf, dob_year = 2014)
getwd()
#setwd('/Users/pure/Private_Local_Data/Study/Udacity/DataAnalyst/Lessons/4.\ Exploratory\ Data\ Analysis/eda-course-materials/lesson3/')
setwd('/media/pure/SharedData/Development/Personal_Dev/DataAnalyst/Lessons/4. Exploratory Data Analysis/eda-course-materials/lesson3/')
list.files()
library(ggplot2)
pf <- read.csv('pseudo_facebook.tsv', sep = '\t')
### You can also read in the data using the following code:
#pf < - read.delim('pseudo_facebook.tsv')
library(ggplot2)
suppressMessages(library(dplyr))
ggplot(aes(x = gender, y = age),
data = subset(pf, !is.na(gender))) + geom_boxplot() +
stat_summary(fun.y = mean, geom = 'point', shape = 4)
ggplot(aes(x = age, y = friend_count),
data = subset(pf, !is.na(gender))) +
geom_line(aes(color = gender), stat = 'summary', fun.y = median)
pf.fc_by_age_gender <- pf %>%
filter(!is.na(gender)) %>%
group_by(age, gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n()) %>%
ungroup() %>%
arrange(age)
ggplot(aes(x = age, y = median_friend_count),
data = pf.fc_by_age_gender) +
geom_line(aes(color = gender))
#install.packages("tidyr")
library(tidyr)
spread(subset(pf.fc_by_age_gender,
select = c('gender', 'age', 'median_friend_count')),
gender, median_friend_count)
#install.packages('reshape2')
library(reshape2)
pf.fc_by_age_gender.wide <- dcast(pf.fc_by_age_gender,
age ~ gender,
value.var = 'median_friend_count')
head(pf.fc_by_age_gender.wide)
pf.fc_by_age_gender.wide <-
subset(pf.fc_by_age_gender[c('age', 'gender', 'median_friend_count')],
!is.na(gender)) %>%
spread(gender, median_friend_count) %>%
mutate(ratio = male / female)
head(pf.fc_by_age_gender.wide)
ggplot(aes(x = age, y = male/female), data = pf.fc_by_age_gender.wide) +
geom_line() +
geom_hline(yintercept = 1, linetype = 'dashed', color = 'blue')
pf$year_joined <- subset(pf, dob_year = 2014)
pf$year_joined <- floor(2014 - pf$tenure/365)
summary(pf$year_joined)
summary(pf$year_joined)
table(pf$year_joined)
cut(pf$year_joined, breaks = 4)
table(cut(pf$year_joined, breaks = 4))
table(cut(pf$year_joined, breaks = (2004, 2009, 2011, 2012, 2014)))
table(cut(pf$year_joined, breaks = c(2004, 2009, 2011, 2012, 2014)))
table(cut(pf$year_joined, breaks = c(2004, 2009, 2011, 2012, 2014)))
?with()
with(pf, cut(year_joined, breaks = c(2004, 2009, 2011, 2012, 2014)))
with(pf, cut(year_joined, breaks = c(2004, 2009, 2011, 2012, 2014)))
table(cut(pf$year_joined, breaks = c(2004, 2009, 2011, 2012, 2014)))
table(pf$year_joined.bucket, useNA = 'ifany')
pf$year_joined.bucket <- cut(pf$year_joined, breaks = c(2004, 2009, 2011, 2012, 2014))
table(pf$year_joined.bucket, useNA = 'ifany')
library(ggplot2) #must load the ggplot package first
library(dplyr)
data(diamonds) #loads the diamonds data set since it comes with the ggplot package
ggplot(aes(x = price), data = diamonds) +
geom_histogram(aes(fill = cut)) +
scale_x_log10() +
facet_wrap(~color) +
#scale_fill_brewer(type = 'qual')
scale_fill_brewer(palette="Spectral")
ggplot(aes(x = table, y = price), data = diamonds) +
geom_point(aes(colour = cut)) +
#scale_fill_brewer(palette="Spectral")
scale_color_brewer(type = 'qual')
subset(diamonds, cut == 'Ideal')$table %>%
summary()
subset(diamonds, cut == 'Premium')$table %>%
summary()
diamonds$volumne <- with(diamonds, x*y*z)
ggplot(aes(x = volumne, y = price), data = subset(diamonds, volumne < quantile(volumne, probs = .99))) +
geom_point(aes(colour = clarity)) +
scale_y_log10() +
scale_color_brewer(type = 'div')
getwd()
setwd('/Users/pure/Private_Local_Data/Study/Udacity/DataAnalyst/Lessons/4.\ Exploratory\ Data\ Analysis/eda-course-materials/lesson3/')
#setwd('/Users/pure/Private_Local_Data/Study/Udacity/DataAnalyst/Lessons/4.\ Exploratory\ Data\ Analysis/eda-course-materials/lesson3/')
setwd('/media/pure/SharedData/Development/Personal_Dev/DataAnalyst/Lessons/4. Exploratory Data Analysis/eda-course-materials/lesson3/')
list.files()
#setwd('/Users/pure/Private_Local_Data/Study/Udacity/DataAnalyst/Lessons/4.\ Exploratory\ Data\ Analysis/eda-course-materials/lesson3/')
setwd('/media/pure/SharedData/Development/Personal_Dev/DataAnalyst/Lessons/4. Exploratory Data Analysis/eda-course-materials/lesson3/')
#setwd('/Users/pure/Private_Local_Data/Study/Udacity/DataAnalyst/Lessons/4.\ Exploratory\ Data\ Analysis/eda-course-materials/lesson3/')
setwd('/media/pure/SharedData/Development/Personal_Dev/DataAnalyst/Lessons/4. Exploratory Data Analysis/eda-course-materials/lesson3/')
list.files()
pf <- read.csv('pseudo_facebook.tsv', sep = '\t')
ent/Personal_Dev/DataAnalyst/Lessons/4. Exploratory Data Analysis/eda-course-materials/lesson3/
#setwd('/Users/pure/Private_Local_Data/Study/Udacity/DataAnalyst/Lessons/4.\ Exploratory\ Data\ Analysis/eda-course-materials/lesson3/')
setwd('/media/pure/SharedData/Development/Personal_Dev/DataAnalyst/Lessons/4. Exploratory Data Analysis/eda-course-materials/lesson3/')
setwd('/media/pure/SharedData/Development/Personal_Dev/DataAnalyst/Lessons/4. Exploratory Data Analysis/eda-course-materials/lesson3/')
list.files()
pf <- read.csv('pseudo_facebook.tsv', sep = '\t')
require("knitr")
opts_knit$set(root.dir = '/media/pure/SharedData/Development/Personal_Dev/DataAnalyst/Lessons/4. Exploratory Data Analysis/eda-course-materials/lesson3/')
list.files()
setwd('/media/pure/SharedData/Development/Personal_Dev/DataAnalyst/Lessons/4. Exploratory Data Analysis/eda-course-materials/lesson3/')
setwd('/media/pure/SharedData/Development/Personal_Dev/DataAnalyst/Lessons/4. Exploratory Data Analysis/eda-course-materials/lesson3/')
setwd('/media/pure/SharedData/Development/Personal_Dev/DataAnalyst/Lessons/4. Exploratory Data Analysis/eda-course-materials/lesson3/')
list.files()
pf <- read.csv('pseudo_facebook.tsv', sep = '\t')
list.files()
#setwd('/Users/pure/Private_Local_Data/Study/Udacity/DataAnalyst/Lessons/4.\ Exploratory\ Data\ Analysis/eda-course-materials/lesson3/')
setwd('/media/pure/SharedData/Development/Personal_Dev/DataAnalyst/Lessons/4. Exploratory Data Analysis/eda-course-materials/lesson3/')
setwd('/media/pure/SharedData/Development/Personal_Dev/DataAnalyst/Lessons/4. Exploratory Data Analysis/eda-course-materials/lesson3/')
setwd('/media/pure/SharedData/Development/Personal_Dev/DataAnalyst/Lessons/4. Exploratory Data Analysis/eda-course-materials/lesson3/')
pf <- read.csv('pseudo_facebook.tsv', sep = '\t')
list.files()
#setwd('/Users/pure/Private_Local_Data/Study/Udacity/DataAnalyst/Lessons/4.\ Exploratory\ Data\ Analysis/eda-course-materials/lesson3/')
setwd('/media/pure/SharedData/Development/Personal_Dev/DataAnalyst/Lessons/4. Exploratory Data Analysis/eda-course-materials/lesson3/')
setwd('/media/pure/SharedData/Development/Personal_Dev/DataAnalyst/Lessons/4. Exploratory Data Analysis/eda-course-materials/lesson3/')
setwd('/media/pure/SharedData/Development/Personal_Dev/DataAnalyst/Lessons/4. Exploratory Data Analysis/eda-course-materials/lesson3/')
list.files()
list.files()
pf <- read.csv('pseudo_facebook.tsv', sep = '\t')
list.files()
names(pf)
pf$friendships_initiated
pf$friendships_initiated / length(pf)
summary(pf$friendships_initiated / length(pf))
summary(pf$friendships_initiated)
length(pf)
length(pf$friendships_initiated)
names(pf$friend_count)
names(pf)
pf$prop_initiated <- with(pf, friendships_initiated/friend_count)
summary(pf$prop_initiated)
getwd()
setwd('/Users/pure/Private_Local_Data/Study/Udacity/DataAnalyst/Lessons/4.\ Exploratory\ Data\ Analysis/eda-course-materials/lesson3/')
getwd()
#setwd('/Users/pure/Private_Local_Data/Study/Udacity/DataAnalyst/Lessons/4.\ Exploratory\ Data\ Analysis/eda-course-materials/lesson3/')
setwd('/media/pure/SharedData/Development/Personal_Dev/DataAnalyst/Lessons/4. Exploratory Data Analysis/eda-course-materials/lesson3/')
list.files()
library(ggplot2)
pf <- read.csv('pseudo_facebook.tsv', sep = '\t')
### You can also read in the data using the following code:
#pf < - read.delim('pseudo_facebook.tsv')
library(ggplot2)
suppressMessages(library(dplyr))
ggplot(aes(x = gender, y = age),
data = subset(pf, !is.na(gender))) + geom_boxplot() +
stat_summary(fun.y = mean, geom = 'point', shape = 4)
ggplot(aes(x = age, y = friend_count),
data = subset(pf, !is.na(gender))) +
geom_line(aes(color = gender), stat = 'summary', fun.y = median)
pf.fc_by_age_gender <- pf %>%
filter(!is.na(gender)) %>%
group_by(age, gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n()) %>%
ungroup() %>%
arrange(age)
ggplot(aes(x = age, y = median_friend_count),
data = pf.fc_by_age_gender) +
geom_line(aes(color = gender))
#install.packages("tidyr")
library(tidyr)
spread(subset(pf.fc_by_age_gender,
select = c('gender', 'age', 'median_friend_count')),
gender, median_friend_count)
#install.packages('reshape2')
library(reshape2)
pf.fc_by_age_gender.wide <- dcast(pf.fc_by_age_gender,
age ~ gender,
value.var = 'median_friend_count')
head(pf.fc_by_age_gender.wide)
pf.fc_by_age_gender.wide <-
subset(pf.fc_by_age_gender[c('age', 'gender', 'median_friend_count')],
!is.na(gender)) %>%
spread(gender, median_friend_count) %>%
mutate(ratio = male / female)
head(pf.fc_by_age_gender.wide)
ggplot(aes(x = age, y = male/female), data = pf.fc_by_age_gender.wide) +
geom_line() +
geom_hline(yintercept = 1, linetype = 'dashed', color = 'blue')
pf$year_joined <- floor(2014 - pf$tenure/365)
summary(pf$year_joined)
table(pf$year_joined)
pf$year_joined.bucket <- cut(pf$year_joined, breaks = c(2004, 2009, 2011, 2012, 2014))
table(pf$year_joined.bucket, useNA = 'ifany')
ggplot(aes(x = age, y = friend_count),
data = subset(pf, !is.na(gender))) +
geom_line(aes(color = gender), stat = 'summary', fun.y = median)
ggplot(aes(x = age, y = friend_count),
data = subset(pf, !is.na(gender))) +
geom_line(aes(color = gender), stat = 'summary', fun.y = median)
ggplot(aes(x = age, y = friend_count),
data = subset(pf, !is.na(year_joined.bucket))) +
geom_line(aes(color = year_joined.bucket),
stat = "summary",
fun.y = median)
ggplot(aes(x = age, y = friend_count),
data = subset(pf, !is.na(year_joined.bucket))) +
geom_line(aes(color = year_joined.bucket),
stat = "summary",
fun.y = mean) +
geom_line(stat = "summary", fun.y = mean, linetype = 2)
with(subset(pf, tenure >= 1), summary(friend_count/tenure))
ggplot(aes(x = tenure, y = friendships_initiated/tenure), data = subset(pf, tenure >= 1)) +
geom_line(aes(color = year_joined.bucket))
library(gridExtra)
p1 <- ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure >= 1)) +
geom_line(aes(color = year_joined.bucket),
stat = 'summary',
fun.y = mean)
p2 <- ggplot(aes(x = 7 * round(tenure / 7), y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_line(aes(color = year_joined.bucket),
stat = 'summary',
fun.y = mean)
p3 <- ggplot(aes(x = 30 * round(tenure / 30), y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_line(aes(color = year_joined.bucket),
stat = 'summary',
fun.y = mean)
p4 <- ggplot(aes(x = 90 * round(tenure / 90), y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_line(aes(color = year_joined.bucket),
stat = 'summary',
fun.y = mean)
grid.arrange(p1, p2, p3, p4, nrow = 4)
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure >= 1)) +
geom_smooth(aes(color = year_joined.bucket))
yo <- read.csv("yogurt.csv")
str(yo)
# change the id from an int to a factor
yo$id <- factor(yo$id)
str(yo)
ggplot(aes(x = price), data = yo) +
geom_histogram()
# very biased model
ggplot(aes(x = price), data = yo) +
geom_histogram(binwidth = 10)
summary(yo)
length(unique(yo$price))
table(yo$price)
yo <- transform(yo, all.purchases = strawberry + blueberry + pina.colada + plain + mixed.berry)
#yo$all.purchases <- yo$strawberry + yo$blueberry + yo$pina.colada + yo$plain + yo$mixed.berry
ggplot(aes(x = time, y = price), data = yo) +
geom_jitter(alpha = 1/4, shape = 21, fill = I('#F79420'))
set.seed(4230)
sample.ids <- sample(levels(yo$id), 16)
ggplot(aes(x = time, y = price),
data = subset(yo, id %in% sample.ids)) +
facet_wrap( ~ id) +
geom_line() +
geom_point(aes(size = all.purchases), pch = 1)
set.seed(10)
sample.ids <- sample(levels(yo$id), 16)
ggplot(aes(x = time, y = price),
data = subset(yo, id %in% sample.ids)) +
facet_wrap( ~ id) +
geom_line() +
geom_point(aes(size = all.purchases), pch = 1)
#install.packages('GGally')
library(GGally)
install.packages('GGally')
#install.packages('GGally')
library(GGally)
theme_set(theme_minimal(20))
# set the seed for reproducible results
set.seed(1836)
pf_subset <- pf[, c(2:15)]
names(pf_subset)
ggpairs(pf_subset[sample.int(nrow(pf_subset), 1000), ], axisLabels = 'internal')
nci <- read.table("nci.tsv")
colnames(nci) <- c(1:64)
library(reshape2)
nci.long.samp <- melt(as.matrix(nci[1:200,]))
names(nci.long.samp) <- c("gene", "case", "value")
head(nci.long.samp)
ggplot(aes(y = gene, x = case, fill = value),
data = nci.long.samp) +
geom_tile() +
scale_fill_gradientn(colours = colorRampPalette(c("blue", "red"))(100))
geom_line(aes(color = year_joined.bucket)
ggplot(aes(x = tenure, y = prop_initiated), data = pf) +
ggplot(aes(x = tenure, y = prop_initiated), data = pf) +
geom_line(aes(colour = year_joined.bucket))
pf$prop_initiated <- with(pf, friendships_initiated/friend_count)
ggplot(aes(x = tenure, y = prop_initiated), data = pf) +
geom_line(aes(colour = year_joined.bucket))
summarise(pf$prop_initiated)
summary(pf$prop_initiated)
ggplot(aes(x = tenure, y = prop_initiated), data = pf) +
geom_line(aes(colour = year_joined.bucket))
ggplot(aes(x = tenure, y = prop_initiated), data = pf) +
geom_line(aes(colours = year_joined.bucket))
ggplot(aes(x = tenure, y = prop_initiated), data = pf) +
geom_line(aes(colour = year_joined.bucket))
ggplot(aes(x = tenure, y = prop_initiated), data = subset(pf, !is.na(prop_initiated)) +
ggplot(aes(x = tenure, y = prop_initiated), data = subset(pf, !is.na(prop_initiated))) +
geom_line(aes(colour = year_joined.bucket))
ggplot(aes(x = tenure, y = prop_initiated), data = subset(pf, !is.na(prop_initiated))) +
ggplot(aes(x = tenure, y = prop_initiated), data = subset(pf, !is.na(prop_initiated))) +
geom_line(aes(colour = year_joined.bucket))
ggplot(aes(x = tenure, y = prop_initiated), data = subset(pf, !is.na(tenure))) +
geom_line(aes(colour = year_joined.bucket))
ggplot(aes(x = tenure, y = prop_initiated), data = subset(pf, !is.na(prop_initiated))) +
geom_line(aes(colour = year_joined.bucket))
ggplot(aes(x = tenure, y = prop_initiated), data = subset(pf, !is.na(year_joined.bucket))) +
geom_line(aes(colour = year_joined.bucket))
ggplot(aes(x = tenure, y = prop_initiated), data = subset(pf, !is.na(year_joined.bucket))) +
geom_line(aes(colour = year_joined.bucket), stat='summary')
ggplot(aes(x = tenure, y = prop_initiated), data = subset(pf, !is.na(year_joined.bucket))) +
geom_line(aes(colour = year_joined.bucket), stat='summary', fun.y = median)
ggplot(aes(x = tenure, y = prop_initiated), data = subset(pf, !is.na(year_joined.bucket))) +
geom_line(aes(colour = year_joined.bucket), stat='summary', fun.y = mean)
ggplot(aes(x = tenure, y = prop_initiated), data = subset(pf, !is.na(year_joined.bucket))) +
geom_line(aes(colour = year_joined.bucket), stat='summary', fun.y = median)
ggplot(aes(x = tenure, y = prop_initiated), data = subset(pf, !is.na(year_joined.bucket))) +
geom_line(aes(colour = year_joined.bucket), stat='summary', fun.y = median) +
geom_smooth(aes(color = year_joined.bucket))
ggplot(aes(x = round(tenure / 7), y = prop_initiated), data = subset(pf, !is.na(year_joined.bucket))) +
geom_line(aes(colour = year_joined.bucket), stat='summary', fun.y = median) +
geom_smooth(aes(color = year_joined.bucket))
ggplot(aes(x = 7*round(tenure / 7), y = prop_initiated), data = subset(pf, !is.na(year_joined.bucket))) +
geom_line(aes(colour = year_joined.bucket), stat='summary', fun.y = median) +
geom_smooth(aes(color = year_joined.bucket))
ggplot(aes(x = 7*round(tenure / 7), y = prop_initiated), data = subset(pf, !is.na(year_joined.bucket))) +
geom_line(aes(colour = year_joined.bucket), stat='summary', fun.y = median) +
geom_smooth()
ggplot(aes(x = 7*round(tenure / 7), y = prop_initiated), data = subset(pf, !is.na(year_joined.bucket))) +
geom_line(aes(colour = year_joined.bucket), stat='summary', fun.y = median) +
geom_smooth(method = 'gam')
ggplot(aes(x = 7*round(tenure / 7), y = prop_initiated), data = subset(pf, !is.na(year_joined.bucket))) +
geom_line(aes(colour = year_joined.bucket), stat='summary', fun.y = median) +
geom_smooth(aes(colour = year_joined.bucket))
ggplot(aes(x = 30*round(tenure / 30), y = prop_initiated), data = subset(pf, !is.na(year_joined.bucket))) +
geom_line(aes(colour = year_joined.bucket), stat='summary', fun.y = median) +
geom_smooth(aes(colour = year_joined.bucket))
ggplot(aes(x = tenure, y = prop_initiated), data = subset(pf, !is.na(year_joined.bucket) & !is.na(prop_initiated))) +
geom_line(aes(colour = year_joined.bucket), stat='summary', fun.y = median)
ggplot(aes(x = 30*round(tenure / 30), y = prop_initiated), data = subset(pf, !is.na(year_joined.bucket) & !is.na(prop_initiated))) +
geom_line(aes(colour = year_joined.bucket), stat='summary', fun.y = median) +
geom_smooth(aes(colour = year_joined.bucket))
ggplot(aes(x = 30*round(tenure / 30), y = prop_initiated), data = subset(pf, !is.na(year_joined.bucket) & !is.na(prop_initiated))) +
geom_line(aes(colour = year_joined.bucket), stat='summary', fun.y = median) +
#geom_smooth(aes(colour = year_joined.bucket))
geom_smooth(method = "lm")
ggplot(aes(x = 30*round(tenure / 30), y = prop_initiated), data = subset(pf, !is.na(year_joined.bucket) & !is.na(prop_initiated))) +
geom_line(aes(colour = year_joined.bucket), stat='summary', fun.y = median) +
geom_smooth(aes(colour = year_joined.bucket))
ggplot(aes(x = 30*round(tenure / 30), y = prop_initiated), data = subset(pf, !is.na(year_joined.bucket) & !is.na(prop_initiated))) +
geom_line(aes(colour = year_joined.bucket), stat='summary', fun.y = median) +
#geom_smooth(aes(colour = year_joined.bucket))
geom_smooth(method = "lm", formula = y ~ x, size = 1)
ggplot(aes(x = 30*round(tenure / 30), y = prop_initiated), data = subset(pf, !is.na(year_joined.bucket) & !is.na(prop_initiated))) +
geom_line(aes(colour = year_joined.bucket), stat='summary', fun.y = median) +
#geom_smooth(aes(colour = year_joined.bucket))
geom_smooth(method = "lm", formula = y ~ x, size = 10)
ggplot(aes(x = 30*round(tenure / 30), y = prop_initiated), data = subset(pf, !is.na(year_joined.bucket) & !is.na(prop_initiated))) +
geom_line(aes(colour = year_joined.bucket), stat='summary', fun.y = median) +
#geom_smooth(aes(colour = year_joined.bucket))
geom_smooth(method = "lm", formula = y ~ x, size = 0.1)
ggplot(aes(x = 30*round(tenure / 30), y = prop_initiated), data = subset(pf, !is.na(year_joined.bucket) & !is.na(prop_initiated))) +
geom_line(aes(colour = year_joined.bucket), stat='summary', fun.y = median) +
#geom_smooth(aes(colour = year_joined.bucket))
geom_smooth(method = "loess", formula = y ~ x, size = 0.1)
ggplot(aes(x = 30*round(tenure / 30), y = prop_initiated), data = subset(pf, !is.na(year_joined.bucket) & !is.na(prop_initiated))) +
geom_line(aes(colour = year_joined.bucket), stat='summary', fun.y = median) +
#geom_smooth(aes(colour = year_joined.bucket))
geom_smooth(method = "lm", formula = y ~ s(x), size = 0.1)
ggplot(aes(x = 30*round(tenure / 30), y = prop_initiated), data = subset(pf, !is.na(year_joined.bucket) & !is.na(prop_initiated))) +
geom_line(aes(colour = year_joined.bucket), stat='summary', fun.y = median) +
#geom_smooth(aes(colour = year_joined.bucket))
geom_smooth(method = "gam", formula = y ~ s(x), size = 0.1)
summary(pf$year_joined.bucket)
pf$year_joined.bucket
subset(pf, year_joined.bucket == (2012,2014]))
subset(pf, year_joined.bucket == '(2012,2014]'))
subset(pf, pf$year_joined.bucket == '(2012,2014]'))
subset(pf, pf$year_joined.bucket == '(2012,2014]')
subset(pf, pf$year_joined.bucket == (2012,2014])
len(subset(pf, pf$year_joined.bucket == '(2012,2014]'))
length(subset(pf, pf$year_joined.bucket == '(2012,2014]'))
length(subset(pf, pf$year_joined.bucket == '(2012,2014]')$friends_initiated)
typo
?typo
subset(pf, year_joined > 2012)
summary(subset(pf, year_joined > 2012))
summary(subset(pf, year_joined > 2012)$friends_initiated)
summary(subset(pf, year_joined > 2012)$prop_initiated)
summary(subset(pf, year_joined > 2012 & year_joined <= 2014)$prop_initiated)
summary(subset(pf, year_joined > 2012)$prop_initiated)
summary(subset(pf, !is.na(year_joined.bucket) & !is.na(prop_initiated) & year_joined > 2012 & year_joined <= 2014)$prop_initiated)
mean(subset(pf, !is.na(year_joined.bucket) &
is.na(prop_initiated) &
year_joined > 2012 & year_joined <= 2014)$prop_initiated)
mean(subset(pf, !is.na(year_joined.bucket) &
is.na(prop_initiated) &
year_joined > 2012 & year_joined <= 2014)$prop_initiated)
mean(subset(pf, !is.na(year_joined.bucket) &
!is.na(prop_initiated) &
year_joined > 2012 & year_joined <= 2014)$prop_initiated)
ggplot(aes(x = cut, y = price/carat),
data = subset(pf, !is.na(year_joined.bucket) & !is.na(prop_initiated))) +
geom_point()
names(diamonds)
ggplot(aes(x = cut, y = price/carat),
data = diamonds) +
geom_point()
ggplot(aes(x = cut, y = price/carat),
data = diamonds) +
geom_point(aes(colour = color))
ggplot(aes(x = cut, y = price/carat),
data = diamonds) +
geom_point(aes(colour = color)) +
facet_wrap(~clarity)
ggplot(aes(x = cut, y = price/carat),
data = diamonds) +
geom_jitter(aes(colour = color)) +
facet_wrap(~clarity)
?geom_jitter
ggplot(aes(x = cut, y = price/carat),
data = diamonds) +
geom_jitter(aes(colour = color)) +
facet_wrap(~clarity) +
scale_color_brewer(type = 'div')
ggplot(aes(x = cut, y = price/carat),
data = diamonds) +
geom_jitter(aes(colour = color), alpha = 1/10) +
facet_wrap(~clarity) +
scale_color_brewer(type = 'div')
names(diamonds)
ggplot(aes(x = carat, y = price), data = diamonds)
ggplot(aes(x = carat, y = price), data = diamonds) +
geom_point()
ggplot(aes(x = carat, y = price), data = subset(diamonds, price < quantile(price, probs = .9)) +
ggplot(aes(x = carat, y = price), data = subset(diamonds, price < quantile(price, probs = .9))) +
geom_point()
ggplot(aes(x = carat, y = price), data = subset(diamonds, price < quantile(price, probs = .9))) +
ggplot(aes(x = carat, y = price), data = subset(diamonds, price < quantile(price, probs = .9))) +
geom_point()
ggplot(aes(x = carat, y = price), data = subset(diamonds, price < quantile(price, probs = .9) & carat < quantile(carat, probs = .0))) +
geom_point()
ggplot(aes(x = carat, y = price), data = subset(diamonds, price < quantile(price, probs = .9) & carat < quantile(carat, probs = .0))) +
geom_point()
ggplot(aes(x = carat, y = price), data = subset(diamonds, price < quantile(price, probs = .9) & carat < quantile(carat, probs = .0))) +
geom_point()
ggplot(aes(x = carat, y = price), data = subset(diamonds, price < quantile(price, probs = .9) & carat < quantile(carat, probs = .9))) +
geom_point()
ggplot(aes(x = carat, y = price), data = diamonds) +
scale_x_continuous(lim = c(0, quantile(diamonds$carat, 0.99))) +
scale_y_continuous(lim = c(0, quantile(price, 0.99))) +
geom_point(fill = I('#F79420'), color = I('black'), shape = 21)
ggplot(aes(x = carat, y = price), data = diamonds) +
scale_x_continuous(lim = c(0, quantile(diamonds$carat, 0.99))) +
scale_y_continuous(lim = c(0, quantile(diamonds$price, 0.99))) +
geom_point(fill = I('#F79420'), color = I('black'), shape = 21)
qplot(data = diamonds, x = carat, y = price,
xlim = c(0, quantile(diamonds$carat, 0.99)),
ylim = c(0, quantile(diamonds$price, 0.99))) +
geom_point(fill = I('#F79420'), color = I('black'), shape = 21)
ggplot(aes(x = carat, y = price), data = subset(diamonds, price < quantile(price, probs = .99) & carat < quantile(carat, probs = .90))) +
geom_point()
ggplot(aes(x = carat, y = price), data = subset(diamonds, price < quantile(price, probs = .99) & carat < quantile(carat, probs = .90))) +
geom_point(fill = I('#F79420'), color = I('black'), shape = 21)
ggplot(aes(x = carat, y = price), data = subset(diamonds, price < quantile(price, probs = .99) & carat < quantile(carat, probs = .99))) +
geom_point(fill = I('#F79420'), color = I('black'), shape = 21)
stat_smooth(method = 'lm)
ggplot(aes(x = carat, y = price), data = diamonds) +
scale_x_continuous(lim = c(0, quantile(diamonds$carat, 0.99))) +
scale_y_continuous(lim = c(0, quantile(diamonds$price, 0.99))) +
geom_point(fill = I('#F79420'), color = I('black'), shape = 21) +
stat_smooth(method = 'lm')
ggplot(aes(x = carat, y = price), data = diamonds) +
scale_x_continuous(lim = c(0, quantile(diamonds$carat, 0.99))) +
scale_y_continuous(lim = c(0, quantile(diamonds$price, 0.99))) +
geom_point(fill = I('#F79420'), color = I('black'), shape = 21) +
stat_smooth(method = 'lm')
ggplot(aes(x = carat, y = price), data = diamonds) +
scale_x_continuous(lim = c(0, quantile(diamonds$carat, 0.99))) +
scale_y_continuous(lim = c(0, quantile(diamonds$price, 0.99))) +
geom_point(fill = I('#F79420'), shape = 21) +
stat_smooth(method = 'lm')
ggplot(aes(x = carat, y = price), data = diamonds) +
scale_x_continuous(lim = c(0, quantile(diamonds$carat, 0.99))) +
scale_y_continuous(lim = c(0, quantile(diamonds$price, 0.99))) +
geom_point(fill = I('#F79420'), color = I('black'), shape = 21, alpha = 1/4) +
stat_smooth(method = 'lm')
ggplot(aes(x = carat, y = price), data = diamonds) +
scale_x_continuous(lim = c(0, quantile(diamonds$carat, 0.99))) +
scale_y_continuous(lim = c(0, quantile(diamonds$price, 0.99))) +
geom_point(fill = I('#F79420'), shape = 21, alpha = 1/4) +
stat_smooth(method = 'lm')

diamonds_mp_by_clarity <- summarise(diamonds_by_clarity, mean_price = mean(price))
diamonds_by_color <- group_by(diamonds, color)
diamonds_mp_by_color <- summarise(diamonds_by_color, mean_price = mean(price))
diamonds_mp_by_clarity
getwd()
setwd('/Users/pure/Private_Local_Data/Study/Udacity/DataAnalyst/Lessons/4.\ Exploratory\ Data\ Analysis/eda-course-materials/lesson3/')
setwd
setwd("/home/pure/Desktop")
getwd()
setwd('/Users/pure/Private_Local_Data/Study/Udacity/DataAnalyst/Lessons/4.\ Exploratory\ Data\ Analysis/eda-course-materials/lesson3/')
setwd("/home/pure/Desktop")
#setwd('/Users/pure/Private_Local_Data/Study/Udacity/DataAnalyst/Lessons/4.\ Exploratory\ Data\ Analysis/eda-course-materials/lesson3/')
list.files()
getwd()
#setwd('/Users/pure/Private_Local_Data/Study/Udacity/DataAnalyst/Lessons/4.\ Exploratory\ Data\ Analysis/eda-course-materials/lesson3/')
list.files()
library(ggplot2)
pf <- read.csv('pseudo_facebook.tsv', sep = '\t')
getwd()
getwd()
#setwd('/Users/pure/Private_Local_Data/Study/Udacity/DataAnalyst/Lessons/4.\ Exploratory\ Data\ Analysis/eda-course-materials/lesson3/')
list.files()
library(ggplot2)
pf <- read.csv('pseudo_facebook.tsv', sep = '\t')
setwd("/media/pure/SharedData/Development/Personal_Dev/DataAnalyst/Lessons/4. Exploratory Data Analysis/eda-course-materials/lesson3")
pf <- read.csv('pseudo_facebook.tsv', sep = '\t')
setwd("/media/pure/SharedData/Development/Personal_Dev/DataAnalyst/Lessons/4.\ Exploratory\ Data\ Analysis/eda-course-materials/lesson3")
getwd()
setwd("/media/pure/SharedData/Development/Personal_Dev/DataAnalyst/Lessons/4.\ Exploratory\ Data\ Analysis/eda-course-materials/lesson3/")
getwd()
pf <- read.csv('pseudo_facebook.tsv', sep = '\t')
#setwd('/Users/pure/Private_Local_Data/Study/Udacity/DataAnalyst/Lessons/4.\ Exploratory\ Data\ Analysis/eda-course-materials/lesson3/')
setwd("/media/pure/SharedData/Development/Personal_Dev/DataAnalyst/Lessons/4. Exploratory Data Analysis/eda-course-materials/lesson3/")
list.files()
#setwd('/Users/pure/Private_Local_Data/Study/Udacity/DataAnalyst/Lessons/4.\ Exploratory\ Data\ Analysis/eda-course-materials/lesson3/')
setwd("/media/pure/SharedData/Development/Personal_Dev/DataAnalyst/Lessons/4. Exploratory Data Analysis/eda-course-materials/lesson4/")
#setwd('/Users/pure/Private_Local_Data/Study/Udacity/DataAnalyst/Lessons/4.\ Exploratory\ Data\ Analysis/eda-course-materials/lesson3/')
setwd("/media/pure/SharedData/Development/Personal_Dev/DataAnalyst/Lessons/4. Exploratory Data Analysis/eda-course-materials/lesson3/")
list.files()
pf <- read.csv('pseudo_facebook.tsv', sep = '\t')
getwd()
#setwd('/Users/pure/Private_Local_Data/Study/Udacity/DataAnalyst/Lessons/4.\ Exploratory\ Data\ Analysis/eda-course-materials/lesson3/')
setwd("/media/pure/SharedData/Development/Personal_Dev/DataAnalyst/Lessons/4. Exploratory Data Analysis/eda-course-materials/lesson3/")
list.files()
library(ggplot2)
pf <- read.csv('pseudo_facebook.tsv', sep = '\t')
### You can also read in the data using the following code:
#pf < - read.delim('pseudo_facebook.tsv')
qplot(x = age, y = friend_count, data = pf)
qplot(age, friend_count, data = pf)
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_point()
ggplot(aes(x = age, y = friend_count), data = pf)+
geom_point() +
xlim(13, 90)
ggplot(aes(x = age, y = friend_count), data = pf)+
geom_jitter() +
xlim(13, 90)
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_jitter(alpha = 1/20) +
xlim(13, 90)
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_point(alpha = 1/20) +
xlim(13, 90)
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_point(alpha = 1/20, position = position_jitter(h = 0)) +
xlim(13, 90) +
coord_trans(y = 'sqrt')
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_point(alpha = 1/20, position = position_jitter(h = 0)) +
xlim(13, 90) +
coord_trans(y = 'sqrt')
#install.packages('dplyr')
#library(dplyr)
## filter()
## group_by()
## mutate()
## arrange()
age_groups <- group_by(pf, age)
#install.packages('dplyr')
library(dplyr)
age_groups <- group_by(pf, age)
pf.fc_by_age <- summarise(age_groups,
friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n())
head(pf.fc_by_age)
pf.fc_by_age <- arrange(pf.fc_by_age, age) # ordering
head(pf.fc_by_age)
#install.packages('dplyr')
library(dplyr)
## filter()
## group_by()
## mutate()
## arrange()
age_groups <- group_by(pf, age)
pf.fc_by_age <- summarise(age_groups,
friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n())
head(pf.fc_by_age)
pf.fc_by_age <- arrange(pf.fc_by_age, age) # ordering
head(pf.fc_by_age)
pf.fc_by_age <- pf %>%
group_by(age) %>%
summarise(friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n()) %>%
arrange(age)
head(pf.fc_by_age)
ggplot(aes(x = age, y = friend_count_mean), data = pf.fc_by_age) +
geom_line()
ggplot(aes(x = age, y = friend_count), data = pf) +
xlim(13, 90) +
geom_point(alpha = 0.05,
position = position_jitter(h = 0),
color = 'orange') +
coord_trans(y = 'sqrt') +
geom_line(stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .1),
linetype = 2, color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .5),
color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = 0.9),
linetype = 2, color = 'blue')
ggplot(aes(x = age, y = friend_count), data = pf) +
coord_cartesian(xlim = c(13, 70), ylim = c(0, 1000)) +
geom_point(alpha = 0.05,
position = position_jitter(h = 0),
color = 'orange') +
geom_line(stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .1),
linetype = 2, color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .5),
color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = 0.9),
linetype = 2, color = 'blue')
cor(pf$age, pf$friend_count, method = 'pearson')
with(pf, cor.test(age, friend_count, method = 'pearson'))
with(subset(pf, age<=70), cor.test(age, friend_count))
ggplot(aes(x = www_likes_received, y = likes_received), data = pf) +
geom_point()
ggplot(aes(x = www_likes_received, y = likes_received), data = pf) +
geom_point() +
xlim(0, quantile(pf$www_likes_received, 0.95)) +
ylim(0, quantile(pf$likes_received, 0.95)) +
geom_smooth(method = 'lm', color = 'red')
cor.test(pf$likes_received, pf$www_likes_received)
# install.packages('alr3')
# library(alr3)
data("Mitchell")
?Mitchell
ggplot(aes(x = Month, y = Temp), data = Mitchell) +
geom_point()
install.packages('alr3')
install.packages('alr3')
library(alr3)
data("Mitchell")
library(alr3)
data("Mitchell")
?Mitchell
install.packages('alr3')
library(alr3)
data("Mitchell")
?Mitchell
ggplot(aes(x = Month, y = Temp), data = Mitchell) +
geom_point()
cor.test(Mitchell$Month, Mitchell$Temp)
range(Mitchell$Month)
ggplot(data = Mitchell, aes(x = Month, y = Temp)) +
geom_point() +
scale_x_continuous(breaks = seq(0, 203, 12))
ggplot(aes(x=(Month%%12),y=Temp), data=Mitchell)+
geom_point()
#install.packages(energy)
library(energy)
install.packages("alr3")
getwd()
#setwd('/Users/pure/Private_Local_Data/Study/Udacity/DataAnalyst/Lessons/4.\ Exploratory\ Data\ Analysis/eda-course-materials/lesson3/')
setwd("/media/pure/SharedData/Development/Personal_Dev/DataAnalyst/Lessons/4. Exploratory Data Analysis/eda-course-materials/lesson3/")
list.files()
library(ggplot2)
pf <- read.csv('pseudo_facebook.tsv', sep = '\t')
### You can also read in the data using the following code:
#pf < - read.delim('pseudo_facebook.tsv')
qplot(x = age, y = friend_count, data = pf)
qplot(age, friend_count, data = pf)
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_point()
ggplot(aes(x = age, y = friend_count), data = pf)+
geom_point() +
xlim(13, 90)
ggplot(aes(x = age, y = friend_count), data = pf)+
geom_jitter() +
xlim(13, 90)
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_jitter(alpha = 1/20) +
xlim(13, 90)
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_point(alpha = 1/20) +
xlim(13, 90)
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_point(alpha = 1/20, position = position_jitter(h = 0)) +
xlim(13, 90) +
coord_trans(y = 'sqrt')
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_point(alpha = 1/20, position = position_jitter(h = 0)) +
xlim(13, 90) +
coord_trans(y = 'sqrt')
#install.packages('dplyr')
library(dplyr)
## filter()
## group_by()
## mutate()
## arrange()
age_groups <- group_by(pf, age)
pf.fc_by_age <- summarise(age_groups,
friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n())
head(pf.fc_by_age)
pf.fc_by_age <- arrange(pf.fc_by_age, age) # ordering
head(pf.fc_by_age)
pf.fc_by_age <- pf %>%
group_by(age) %>%
summarise(friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n()) %>%
arrange(age)
head(pf.fc_by_age)
ggplot(aes(x = age, y = friend_count_mean), data = pf.fc_by_age) +
geom_line()
ggplot(aes(x = age, y = friend_count), data = pf) +
xlim(13, 90) +
geom_point(alpha = 0.05,
position = position_jitter(h = 0),
color = 'orange') +
coord_trans(y = 'sqrt') +
geom_line(stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .1),
linetype = 2, color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .5),
color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = 0.9),
linetype = 2, color = 'blue')
ggplot(aes(x = age, y = friend_count), data = pf) +
coord_cartesian(xlim = c(13, 70), ylim = c(0, 1000)) +
geom_point(alpha = 0.05,
position = position_jitter(h = 0),
color = 'orange') +
geom_line(stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .1),
linetype = 2, color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .5),
color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = 0.9),
linetype = 2, color = 'blue')
cor(pf$age, pf$friend_count, method = 'pearson')
with(pf, cor.test(age, friend_count, method = 'pearson'))
with(subset(pf, age<=70), cor.test(age, friend_count))
ggplot(aes(x = www_likes_received, y = likes_received), data = pf) +
geom_point()
ggplot(aes(x = www_likes_received, y = likes_received), data = pf) +
geom_point() +
xlim(0, quantile(pf$www_likes_received, 0.95)) +
ylim(0, quantile(pf$likes_received, 0.95)) +
geom_smooth(method = 'lm', color = 'red')
cor.test(pf$likes_received, pf$www_likes_received)
install.packages('alr3')
library(alr3)
data("Mitchell")
?Mitchell
ggplot(aes(x = Month, y = Temp), data = Mitchell) +
geom_point()
cor.test(Mitchell$Month, Mitchell$Temp)
range(Mitchell$Month)
ggplot(data = Mitchell, aes(x = Month, y = Temp)) +
geom_point() +
scale_x_continuous(breaks = seq(0, 203, 12))
ggplot(aes(x=(Month%%12),y=Temp), data=Mitchell)+
geom_point()
#install.packages(energy)
library(energy)
install.packages(energy)
install.packages("energy")
library(energy)
x <- seq(0, 4*pi, pi/20)
y <- cos(x)
qplot(x = x, y = y)
dcor.ttest(x, y)
install.packages("energy")
library(energy)
x <- seq(0, 4*pi, pi/20)
y <- cos(x)
qplot(x = x, y = y)
dcor.ttest(x, y)
ggplot(aes(x = age, y = friend_count_mean), data = pf.fc_by_age) +
geom_line()
head(pf.fc_by_age, 10)
pf.fc_by_age[18:19, ]
pf$age_with_months <- pf$age + (1 - pf$dob_month/12)
## alternate solution:
# pf$age_with_months <- with(pf, age + (1 - dob_month / 12))
library(dplyr)
pf.fc_by_age_months <- pf %>%
group_by(age_with_months) %>%
summarise(friend_count_mean = mean(friend_count),
friend_count_median = median(as.numeric(friend_count)),
n =n()) %>%
arrange(age_with_months)
head(pf.fc_by_age_months, 5)
age_with_months_groups <- group_by(pf, age_with_months)
pf.fc_by_age_months2 <- summarise(age_with_months_groups,
friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n())
pf.fc_by_age_months2 <- arrange(pf.fc_by_age_months2, age_with_months)
head(pf.fc_by_age_months2)
ggplot(aes(x = age_with_months, y = friend_count_mean),
data = subset(pf.fc_by_age_months, age_with_months < 71)) +
geom_line()
p1 <- ggplot(aes(x = age, y = friend_count_mean),
data = subset(pf.fc_by_age, age < 71)) +
geom_line() +
geom_smooth()
p2 <- ggplot(aes(x = age_with_months, y = friend_count_mean),
data = subset(pf.fc_by_age_months, age_with_months < 71)) +
geom_line() +
geom_smooth()
p3 <- ggplot(aes(x = round(age / 5) * 5, y = friend_count),
data = subset(pf, age < 71)) +
geom_line(stat = 'summary', fun.y = mean)
library(gridExtra)
install.packages("energy")
installed.packages("gridExtra")
install.packages("gridExtra")
library(gridExtra)
grid.arrange(p2, p1, p3, ncol = 1)
getwd()
#setwd('/Users/pure/Private_Local_Data/Study/Udacity/DataAnalyst/Lessons/4.\ Exploratory\ Data\ Analysis/eda-course-materials/lesson3/')
list.files()
pf <- read.csv('pseudo_facebook.tsv', sep = '\t')
#install.packages('ggplot2')
library(ggplot2)
names(pf)
qplot(x = dob_day, data = pf) +
scale_x_continuous(breaks=1:31)
ggplot(aes(x = dob_day), data = pf) +
geom_histogram(binwidth = 1) +
scale_x_continuous(breaks = 1:31)
qplot(x = dob_day, data = pf) +
scale_x_continuous(breaks=1:31)+
facet_wrap(~dob_month, ncol = 3)
ggplot(aes(x = dob_day), data = pf) +
geom_histogram(binwidth = 1) +
scale_x_continuous(breaks = 1:31) +
facet_wrap(~dob_month)
qplot(x = friend_count, data = pf)
ggplot(aes(x = friend_count), data = pf) +
geom_histogram()
qplot(x = friend_count, data = pf, xlim = c(0, 1000))
qplot(x = friend_count, data = pf) +
scale_x_continuous(limits = c(0, 1000))
ggplot(aes(x = friend_count), data = pf) +
geom_histogram() +
scale_x_continuous(limits = c(0, 1000))
qplot(x = friend_count, data = pf, binwidth = 25) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50))
ggplot(aes(x = friend_count), data = pf) +
geom_histogram(binwidth = 25) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 100))
# What code would you add to create a facet the histogram by gender?
# Add it to the code below.
qplot(x = friend_count, data = pf, binwidth = 10) +
scale_x_continuous(limits = c(0, 1000),
breaks = seq(0, 1000, 50)) +
facet_wrap(~gender)
qplot(x = friend_count, data = pf) +
facet_grid(gender ~ .)
ggplot(aes(x = friend_count), data = pf) +
geom_histogram() +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
facet_wrap(~gender)
qplot(x = friend_count, data = subset(pf, !is.na(gender)), binwidth = 10) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
facet_wrap(~gender)
qplot(x = friend_count, data = na.omit(pf), binwidth = 10) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
facet_wrap(~gender)
ggplot(aes(x = friend_count), data = subset(pf, !is.na(gender))) +
geom_histogram() +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
facet_wrap(~gender)
table(pf$gender)
by(pf$friend_count, pf$gender, summary)
qplot(x = tenure, data = pf, binwidth = 30,
color = I('black'), fill = I('#099DD9'))
ggplot(aes(x = tenure), data = pf) +
geom_histogram(binwidth = 30, color = 'black', fill = '#099DD9')
qplot(x = tenure/365, data = pf, binwidth = .25,
color = I('black'), fill = I('#F79420')) +
scale_x_continuous(breaks = seq(1, 7, 1), limits = c(0, 7))
ggplot(aes(x = tenure/365), data = pf) +
geom_histogram(binwidth = .25, color = 'black', fill = '#F79420')
qplot(x = tenure/365, data = pf, binwidth = .25,
color = I('black'), fill = I('#F79420')) +
scale_x_continuous(breaks = seq(1, 7, 1), limits = c(0, 7)) +
xlab('Number of years using Facebook') +
ylab('Number of users in sample')
ggplot(aes(x = pf$tenure/365), data = pf) +
geom_histogram(binwidth = .25, color = 'black', fill= '#F79420') +
scale_x_continuous(breaks = seq(1, 7, 1), limits = c(0, 7)) +
xlab('Number of years using Facebook') +
ylab('Number of users in sample')
qplot(x = pf$age, data=pf, binwidth = 1,
color = I('black'), fill = I('#5760AB')) +
scale_x_continuous(breaks = seq(0, 113, 5))
ggplot(aes(x = pf$age), data = pf) +
geom_histogram(binwidth = 1, color = 'black', fill= '#5760AB') +
scale_x_continuous(breaks = seq(0, 113, 5))
p1 <- ggplot(aes(x = friend_count), data = pf) +
geom_histogram(color = 'black', fill='#5760AB')
p2 <- qplot(x = log10(pf$friend_count+1), data = pf, color = I('black'), fill = I('#5760AB'))
p3 <- p1 + scale_x_log10()
p4 <- p1 + scale_x_sqrt()
library(gridExtra)
grid.arrange(p1, p2, p3, p4, ncol = 2)
# Done in above
qplot(x = friend_count, data = subset(pf, !is.na(gender)), binwidth=10, geom = 'freqpoly', color = gender) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50))
#facet_wrap(~gender)
qplot(x = friend_count, y = ..count../sum(..count..), data = subset(pf, !is.na(gender)), binwidth=10, geom = 'freqpoly', color = gender) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
xlab('Friend Count') +
ylab('Proportion of users with that friend count')
#facet_wrap(~gender)
ggplot(aes(x = friend_count, y = ..count../sum(..count..)),
data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender), binwidth=10) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
xlab('Friend Count') +
ylab('Proportion of users with that friend count')
qplot(x = www_likes, data = subset(pf, !is.na(gender)),
geom = 'freqpoly', color = gender) +
scale_x_log10()
ggplot(aes(x = www_likes), data = subset(pf, !is.na(gender))) +
geom_freqpoly(aes(color = gender)) +
scale_x_log10()
ggplot(aes(x = www_likes, y=..density..), data = subset(pf, !is.na(gender))) +
#geom_histogram(binwidth = 10, color = 'black', fill = '#5760AB') +
geom_freqpoly(aes(color=gender)) +
scale_x_log10()
#scale_x_continuous(limits = c(0, 100), breaks = seq(0, 1000, 100))
#facet_wrap(~gender)
by(pf$www_likes, pf$gender, sum)
qplot(x = friend_count, data = subset(pf, !is.na(gender)), binwidth = 25) +
scale_x_continuous(limits = c(0, 1000), breaks = seq(0, 1000, 50)) +
facet_wrap(~gender)
p1 <- qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot',
ylim = c(0, 1000))
p2 <- qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot') +
scale_y_continuous(limits = c(0, 1000))
p3 <- qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot') +
coord_cartesian(ylim = c(0, 1000))
grid.arrange(p1, p2, p3, nrow = 1)
qplot(x = gender, y = friend_count,
data = subset(pf, !is.na(gender)),
geom = 'boxplot') +
coord_cartesian(ylim = c(0, 250))
by(pf$friend_count, pf$gender, summary)
qplot(x = gender, y = friendships_initiated,
data = subset(pf, !is.na(gender)),
geom = 'boxplot') +
coord_cartesian(ylim = c(0, 150))
by(pf$friendships_initiated, pf$gender, summary)
summary(pf$mobile_likes)
summary(pf$mobile_likes > 0)
pf$mobile_check_in <- NA
pf$mobile_check_in <- ifelse(pf$mobile_likes > 0, 1, 0)
pf$mobile_check_in <- factor(pf$mobile_check_in)
summary(pf$mobile_check_in)
sum(pf$mobile_check_in == 1) / length(pf$mobile_check_in) * 100
diamonds_mp_by_clarity
knitr::opts_chunk$set(echo = TRUE)
ggplot(aes(x = clarity, y = mean_price), data = diamonds_mp_by_clarity) +
geom_bar()
ggplot(aes(x = clarity, y = mean_price), data = diamonds_mp_by_clarity) +
geom_point()
?geom_bar
ggplot(aes(x = clarity, y = mean_price), data = diamonds_mp_by_clarity) +
geom_col()
p2 = ggplot(aes(x = color, y = mean_price, data = diamonds_mp_by_color)) +
geom_gol()
p2 = ggplot(aes(x = color, y = mean_price) data = diamonds_mp_by_color) +
p2 = ggplot(aes(x = color, y = mean_price), data = diamonds_mp_by_color) +
geom_gol()
p1 = ggplot(aes(x = clarity, y = mean_price), data = diamonds_mp_by_clarity) +
geom_col()
p2 = ggplot(aes(x = color, y = mean_price), data = diamonds_mp_by_color) +
geom_col()
library(extraGrid)
library(gridExtra)
grid.arrange(p1, p2, nrow = 1)
p1 = ggplot(aes(x = clarity, y = mean_price), data = diamonds_mp_by_clarity) +
geom_bar(stat = "identity")
grid.arrange(p1, p2, nrow = 1)
